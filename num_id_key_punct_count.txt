%{
#include <stdio.h>
int digit_count = 0, key_count = 0, id_count = 0, punch_count = 0, space_count = 0, brack_count = 0, operator_count = 0;%}

letter [_a-zA-Z]
digit [0-9]
id {letter}({letter}|{digit})*
punch [,:':!"]
brack "{""}""("")""[""]"
operator "+=""<="">=""==""!=""-="
space [\n\t]

%%
{digit} {printf("%s is an integer value\n", yytext); digit_count++;}
"int"|"for"|"while"|"doublt"|"if"|"else"|"goto"|"float" {printf("%s is a keyword\n", yytext); key_count++;}
{id} {printf("%s is an indentifier\n", yytext); id_count++;}
{punch} {printf("%s is an punctutation\n", yytext); punch_count++;}
{space} {printf("%s is a space\n", yytext); space_count++;}
{brack} {printf("%s is a bracket\n", yytext); brack_count++;}
{operator} {printf("%s is a relational operator\n", yytext); operator_count++;}
%%
int yywrap()
{return 1;}
void main()
{
  printf("Enter a string: ");
  yylex();
  printf("%d: digits\n", digit_count);
   printf("%d: keywords\n", key_count);
   printf("%d: indentifiers\n", id_count);
  printf("%d: punctuation mark\n", punch_count);
 printf("%d: white spaces\n", space_count);
 printf("%d: brackets\n", brack_count);
 printf("%d: relational operator\n", operator_count);
}
